#web と redis という 2 つのサービスを定義
version: "3.9"
services:
  app:
    build:
      context: .
      dockerfile: python/Dockerfile 
      image: mercari-build-training/app:latest
      ports:
        - "9000:9000"
      environment:
        FLASK_URL: http://localhost:3000/
      networks:
        - mercari_build_network
      
  #web サービスは、カレントディレクトリ内のDockerfileからビルドされた
  #イメージを利用します。 そしてコンテナーとホストマシンを、
  #公開用ポート8000でつなぎます。 このサービス例では、
  #Flask ウェブサーバーのデフォルトポートである5000を利用するものです。
  web:
    build:
      context: .
      dockerfile: typescript/simple-mercari-web/Dockerfile
    image: mercari-build-training/web:latest
    ports:
      - "3000:3000"
    environment:
        REACT_APP_API_URL: http://localhost:9000/
    networks:
      - mercari_build_network
    depends_on:
      - app
#ホスト上のプロジェクトディレクトリ（カレントディレクトリ）を、
#コンテナー内にある /code ディレクトリにマウントします。 
#こうすることで、イメージを再構築することなく、
#実行中のコードを修正できるようになります。 
    volumes:
      - .:/code

networks:
  mercari_build_network:
    driver: bridge
